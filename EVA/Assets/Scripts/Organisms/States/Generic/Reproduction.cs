//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace States
{
	public class Reproduction : State
	{
		public Reproduction(Organism organism, DUpdateState updateState) : base(organism, updateState) {
			Debug.Log(Organism + " is reproducing");
		}

		#region implemented abstract members of State

		public override void Action ()
		{

		}

		public override void FixedAction ()
		{
			if(target.GetComponent<A>().BasicState != BasicActionState.Death) { // A placer dans la boucle =)...
				while(Vector3.Distance(transform.position, target.transform.position) > 2F)
				{
					transform.localRotation = Quaternion.Slerp(transform.localRotation, Quaternion.LookRotation(transform.position - target.transform.position), 0.02F);
					transform.position = Vector3.Lerp(transform.position, target.transform.position, 0.3F * Time.deltaTime);
					yield return null;
				}
				
				print("Reached the target.");
				
			} else {
				print("My partner died :(");
			}

		}

		#endregion
	}
}

